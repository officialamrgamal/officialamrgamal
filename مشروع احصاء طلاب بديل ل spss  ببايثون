import pandas as pd  # استيراد مكتبة Pandas

# قراءة ملف Excel
df = pd.read_excel("students_data.xlsx")

# عرض أول 5 صفوف من البيانات
print(df.head())


2️⃣ الإحصاء الوصفي (Descriptive Statistics)
في SPSS، يمكنك الحصول على المتوسط والانحراف المعياري، وفي Python:



print(df.describe())
3️⃣ حساب متوسط مستوى التوتر حسب الجنس

print(df.groupby("Gender")["Stress_Level"].mean())
4️⃣ اختبار T-Test لمقارنة مجموعتين (تجريبي/تحكم)

from scipy.stats import ttest_ind

exp_group = df[df["Group"] == "Experimental"]["Stress_Level"]
control_group = df[df["Group"] == "Control"]["Stress_Level"]

t_stat, p_value = ttest_ind(exp_group, control_group)
print(f"T-Statistic: {t_stat}, P-Value: {p_value}")
🔹 إذا كانت p-value < 0.05، فهذا يعني وجود فرق ذو دلالة إحصائية.

5️⃣ اختبار ANOVA للتحقق مما إذا كانت هناك فروقات بين المجموعات
python
Copy
Edit
from scipy.stats import f_oneway

anova_result = f_oneway(df[df["Group"] == "Experimental"]["GPA"],
                        df[df["Group"] == "Control"]["GPA"])
print(f"F-Statistic: {anova_result.statistic}, P-Value: {anova_result.pvalue}")
6️⃣ تحليل الارتباط بين عدد ساعات الدراسة والمعدل (Correlation)
python
Copy
Edit
correlation = df["Study_Hours"].corr(df["GPA"])
print(f"Correlation between Study Hours and GPA: {correlation}")
🔹 إذا كانت القيمة قريبة من 1، فهناك ارتباط قوي بين المتغيرين.

7️⃣ تحليل الانحدار الخطي للتنبؤ بالمعدل الدراسي بناءً على عدد ساعات الدراسة

import statsmodels.api as sm

X = df["Study_Hours"]
y = df["GPA"]

X = sm.add_constant(X)  # إضافة الحد الثابت
model = sm.OLS(y, X).fit()

print(model.summary())
🔹 هذا يحل محل تحليل الانحدار في SPSS.

8️⃣ اختبار Chi-Square للتحقق من العلاقة بين الجنس والمجموعة التجريبية

from scipy.stats import chi2_contingency

contingency_table = pd.crosstab(df["Gender"], df["Group"])
chi2, p, dof, expected = chi2_contingency(contingency_table)

print(f"Chi-Square: {chi2}, P-Value: {p}")
🔹 إذا كانت p-value < 0.05، فهناك ارتباط بين الجنس والمجموعة.

9️⃣ رسم مخطط Box Plot لمقارنة مستوى التوتر بين الجنسين

import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(x="Gender", y="Stress_Level", data=df)
plt.title("Stress Level by Gender")
plt.show()
🔹 يعادل هذا المخطط تحليل الصندوق (Box Plot) في SPSS.

🔟 تحليل التوزيع الطبيعي لمستوى التوتر باستخدام اختبار Shapiro-Wilk

Edit
from scipy.stats import shapiro

shapiro_test = shapiro(df["Stress_Level"])
print(f"Shapiro-Wilk Test Statistic: {shapiro_test.statistic}, P-Value: {shapiro_test.pvalue}")
🔹 إذا كانت p-value < 0.05، فهذا يعني أن البيانات ليست موزعة طبيعيًا.

شرح الأكواد 

import pandas as pd
الأهمية: يستورد مكتبة Pandas التي تُستخدم للتعامل مع البيانات الجدولية (مثل ملفات Excel) وحساب الإحصاءات بسهولة.
df = pd.read_excel("students_data.xlsx")
الأهمية: يقرأ ملف Excel يحتوي على بيانات الطلاب ويحولها إلى جدول (DataFrame) لتحليله.
print(df.head())
الأهمية: يعرض أول 5 صفوف من البيانات للتأكد من تحميلها بشكل صحيح.
print(df.describe())
الأهمية: يعطي إحصاءات وصفية (مثل المتوسط والانحراف المعياري) لجميع الأعمدة الرقمية في البيانات.
print(df.groupby("Gender")["Stress_Level"].mean())
الأهمية: يحسب متوسط مستوى التوتر لكل جنس (ذكور/إناث) لمقارنة الفروقات بينهما.
from scipy.stats import ttest_ind ...
الأهمية: يجري اختبار T لمعرفة ما إذا كان هناك فرق ذو دلالة إحصائية في مستوى التوتر بين المجموعة التجريبية والضابطة.
from scipy.stats import f_oneway ...
الأهمية: يستخدم اختبار ANOVA للتحقق من وجود فروقات في المعدل الدراسي (GPA) بين مجموعتين أو أكثر.
correlation = df["Study_Hours"].corr(df["GPA"]) ...
الأهمية: يحسب الارتباط بين ساعات الدراسة والمعدل الدراسي لمعرفة قوة العلاقة بينهما.
import statsmodels.api as sm ...
الأهمية: يجري تحليل الانحدار الخطي للتنبؤ بالمعدل الدراسي بناءً على ساعات الدراسة ويوفر تفاصيل العلاقة.
from scipy.stats import chi2_contingency ...
الأهمية: يستخدم اختبار Chi-Square لمعرفة ما إذا كان هناك ارتباط بين الجنس والانتماء للمجموعة التجريبية أو الضابطة.
import seaborn as sns ... sns.boxplot ...
الأهمية: يرسم مخطط Box Plot لمقارنة مستوى التوتر بين الجنسين بصريًا، مما يسهل رؤية التوزيع والفروقات.
from scipy.stats import shapiro ...
الأهمية: يجري اختبار Shapiro-Wilk للتحقق مما إذا كان توزيع مستوى التوتر طبيعيًا، وهو مهم لتطبيق الاختبارات الإحصائية بشكل صحيح.
كل خطوة تساعد في تحليل البيانات بطريقة منهجية، من التحميل إلى الرسوم البيانية والاختبارات الإحصائية!






اشرح بتعمق احصاء كل كود بيعمل ايه بالعربية 


سأشرح كل كود بتعمق باللغة العربية، مع التركيز على الإحصاء وما يفعله كل جزء خطوة بخطوة:

1. import pandas as pd
ما يفعله: يستورد مكتبة Pandas ويعطيها الاسم المختصر "pd" لتسهيل استخدامها.
الأهمية الإحصائية: Pandas هي أداة أساسية لتحليل البيانات الجدولية. تتيح قراءة الملفات (مثل Excel)، وتنظيم البيانات، وحساب الإحصاءات الأساسية مثل المتوسط والانحراف المعياري.
2. df = pd.read_excel("students_data.xlsx")
ما يفعله: يقرأ ملف Excel باسم "students_data.xlsx" ويخزنه في متغير يسمى df (اختصار لـ DataFrame، وهو جدول بيانات).
الأهمية الإحصائية: هذه الخطوة تحمل البيانات الخام (مثل الجنس، المعدل الدراسي، مستوى التوتر) إلى Python لتحليلها. بدونها، لا يمكن إجراء أي عمليات إحصائية.
3. print(df.head())
ما يفعله: يطبع أول 5 صفوف من جدول البيانات df.
الأهمية الإحصائية: يساعد في التحقق من شكل البيانات (الأعمدة مثل "Gender"، "Stress_Level") والتأكد من تحميلها بشكل صحيح قبل التحليل. هذا عرض أولي وليس تحليلًا إحصائيًا لكنه خطوة تمهيدية ضرورية.
4. print(df.describe())
ما يفعله: يعرض إحصاءات وصفية لجميع الأعمدة الرقمية في df مثل العدد (count)، المتوسط (mean)، الانحراف المعياري (std)، والقيم الدنيا والعليا.
الأهمية الإحصائية: يقدم نظرة عامة على التوزيع والتباين في البيانات. على سبيل المثال، إذا كان متوسط "Stress_Level" مرتفعًا والانحراف المعياري كبيرًا، فهذا يشير إلى تباين كبير في مستويات التوتر بين الطلاب.
5. print(df.groupby("Gender")["Stress_Level"].mean())
ما يفعله:
يقسم البيانات إلى مجموعتين حسب "Gender" (ذكور وإناث).
يحسب متوسط "Stress_Level" لكل مجموعة.
يطبع النتائج.
الأهمية الإحصائية: يوفر مقارنة بسيطة بين متوسطات المجموعات. إذا كان متوسط التوتر للإناث أعلى من الذكور، قد يشير ذلك إلى فروقات تحتاج إلى اختبار إحصائي إضافي (مثل T-test).
6. from scipy.stats import ttest_ind ...
ما يفعله:
يستورد دالة ttest_ind من مكتبة scipy.stats.
يحدد مجموعتين: "Experimental" و"Control" بناءً على عمود "Group"، ويأخذ قيم "Stress_Level" لكل منهما.
يجري اختبار T للمقارنة بين متوسطي المجموعتين ويطبع قيمة T (t_stat) والاحتمال (p_value).
الأهمية الإحصائية: يختبر ما إذا كان هناك فرق ذو دلالة إحصائية بين متوسطي مستوى التوتر للمجموعتين. إذا كانت p_value < 0.05، يعني أن الفرق ليس عشوائيًا بل ذو أهمية إحصائية.
7. from scipy.stats import f_oneway ...
ما يفعله:
يستورد دالة f_oneway لاختبار ANOVA.
يقارن قيم "GPA" بين مجموعتي "Experimental" و"Control".
يطبع قيمة F (statistic) والاحتمال (pvalue).
الأهمية الإحصائية: ANOVA يتحقق مما إذا كانت هناك فروقات كبيرة بين متوسطات المعدل الدراسي لأكثر من مجموعتين (هنا اثنتان فقط). إذا كانت pvalue < 0.05، فهناك فرق ذو دلالة بين المجموعات.
8. correlation = df["Study_Hours"].corr(df["GPA"]) ...
ما يفعله:
يحسب معامل الارتباط (Correlation Coefficient) بين "Study_Hours" و"GPA".
يطبع النتيجة (قيمة بين -1 و1).
الأهمية الإحصائية: يقيس قوة واتجاه العلاقة بين ساعتين الدراسة والمعدل. إذا كانت القيمة قريبة من 1، فهناك علاقة طردية قوية (الدراسة أكثر = معدل أعلى)، وإذا كانت قريبة من -1، فهي عكسية.
9. import statsmodels.api as sm ...
ما يفعله:
يستورد مكتبة statsmodels لتحليل الانحدار.
يحدد "Study_Hours" كمتغير مستقل (X) و"GPA" كمتغير تابع (y).
يضيف ثابتًا (intercept) إلى النموذج.
ينشئ نموذج انحدار خطي باستخدام OLS (Ordinary Least Squares) ويطبع ملخص النتائج.
الأهمية الإحصائية: يتنبأ بالمعدل الدراسي بناءً على ساعات الدراسة ويوفر تفاصيل مثل معامل الانحدار (slope)، الثابت (intercept)، ودلالة النتائج (p-values). يساعد في فهم تأثير الدراسة على المعدل كميًا.
10. from scipy.stats import chi2_contingency ...
ما يفعله:
ينشئ جدول تبادلي (contingency table) بين "Gender" و"Group".
يجري اختبار Chi-Square ويطبع قيمة Chi2 والاحتمال (p).
الأهمية الإحصائية: يتحقق مما إذا كان هناك ارتباط بين متغيرين نوعيين (الجنس والمجموعة). إذا كانت p < 0.05، فهناك علاقة ذات دلالة (مثل أن الذكور أكثر في المجموعة التجريبية).
11. import seaborn as sns ... sns.boxplot ...
ما يفعله:
يستورد مكتبتي seaborn وmatplotlib للرسم.
يرسم مخطط Box Plot لمقارنة "Stress_Level" بين الجنسين ويعرضه.
الأهمية الإحصائية: يوفر تمثيلًا بصريًا لتوزيع التوتر، مما يظهر المتوسط، المدى، والقيم الشاذة (outliers). يساعد في رؤية الفروقات بين الذكور والإناث بسهولة.
12. from scipy.stats import shapiro ...
ما يفعله:
يستورد دالة shapiro لاختبار التوزيع الطبيعي.
يطبق الاختبار على "Stress_Level" ويطبع القيمة الإحصائية (statistic) والاحتمال (pvalue).
الأهمية الإحصائية: يتحقق مما إذا كان توزيع مستوى التوتر طبيعيًا (يشبه الجرس). إذا كانت pvalue < 0.05، فالبيانات ليست طبيعية، مما قد يتطلب تحويل البيانات أو استخدام اختبارات غير بارامترية.

