
#ุชูุฑูุจ
UPDATE new_region SET revenue = ROUND(revenue, 2);

#ุชุนุฑุถ ุงูู 5
#SELECT * FROM new_region LIMIT 5;

#ุชุฌูุน ุนุฏุฏ ุงูููุงุทู
SELECT COUNT(*) FROM new_region;



#ุงุฒุงูู ุงูุชูุฑุงุฑุงุช 
DELETE FROM new_region 
WHERE ctid NOT IN (SELECT MIN(ctid) FROM new_region GROUP BY region, revenue, date);

#ุฒูุงุฏุฉ ุชุตููู 
ALTER TABLE new_region ADD COLUMN revenue_category TEXT;
UPDATE new_region
SET revenue_category = CASE 
    WHEN revenue < 1000 THEN 'Low'
    WHEN revenue BETWEEN 1000 AND 5000 THEN 'Medium'
    ELSE 'High'
END;

#ุณูุงุณู ุฒูููุฉ 1 
ALTER TABLE new_region ADD COLUMN year INT;
ALTER TABLE new_region ADD COLUMN month INT;
ALTER TABLE new_region ADD COLUMN day INT;

UPDATE new_region
SET year = EXTRACT(YEAR FROM date),
    month = EXTRACT(MONTH FROM date),
    day = EXTRACT(DAY FROM date);


#
ุนุฑุถ ุงุณูุงุก ุงูุงุนูุฏุฉ 
SELECT column_name 
FROM information_schema.columns 
WHERE table_name = 'new_region';



#ูุงู ูุนุงูุฌุงุช ุนูู ุญุณุจ ุงููุตูู ุงูุดูุฑูุฉ 
SELECT 
    CASE 
        WHEN month IN (12, 1, 2) THEN 'Winter'
        WHEN month IN (3, 4, 5) THEN 'Spring'
        WHEN month IN (6, 7, 8) THEN 'Summer'
        ELSE 'Fall'
    END AS season, 
    SUM(revenue) AS total_revenue
FROM new_region
GROUP BY season;


# ุชุฌููุน ุนูู ุญุณุจ ุงูุดูุฑ 
SELECT MONTH, SUM(revenue) 
FROM new_region 
GROUP BY MONTH;

# ุชุฌููุน ุนูู ุญุณุจ ุงูุณูุฉ 
SELECT YEAR, SUM(revenue) 
FROM new_region 
GROUP BY YEAR;



#ุจูุญุณุจ ุงููุฑู ูุง ุจูู ูู ุดูุฑ 
SELECT year, month, 
       SUM(revenue) AS total_revenue,
       SUM(revenue) - LAG(SUM(revenue)) OVER (
	   ORDER BY year, month) AS month_change
FROM new_region
GROUP BY year, month;


#ุงุญุณุจ ุงุนูู ูุงูู ุงูุฑุงุฏ 

SELECT MAX(revenue) AS max_revenue, MIN(revenue) AS min_revenue FROM new_region;


#ุชุบูุฑ ููุน ุงูุจูุงูุงุช 
ALTER TABLE new_region ALTER COLUMN revenue TYPE NUMERIC(10,2);


5 ุงุฎุทุงุก ุดุงุฆุนุฉ 
1- ุงูููู ุงููุงุฑุบู 
ุทุฑููุฉ ุงูุชุดุงููุง 

SELECT * FROM new_region WHERE region IS NULL OR region = '';

ุญู ุงููุดููุฉ 
ุญุฐู ุงูุตููู ุงู ุงูุชุนููุถ ูุซู ุจุงููุชูุณุท ุจุงูุตูุฑ 
ุทุฑููุฉ ุฌุฏูุฏุฉ ุญุฐู ุงููุงุฑุบ 
DELETE FROM new_region WHERE region IS NULL OR region = '';



2- ููู ุบูุฑ ุฑูููุฉ ูู ุนููุฏ ูุซู ุงูุงูุฑุงุฏุงุช 
ุทุฑููุฉ ุงูุชุดุงููุง 
SELECT * FROM new_region WHERE revenue ~ '[^0-9.]';


โข	ุชุญููู ุงูููู ุงููุตูุฉ ุฅูู ุฃุฑูุงู ุฅู ุฃููู:


UPDATE new_region SET revenue = REPLACE(revenue, ' ', '') WHERE revenue ~ '[ ]';
โข	ุญุฐู ุงูุณุฌูุงุช ุบูุฑ ุงููุงุจูุฉ ููุชุญููู:

DELETE FROM new_region WHERE revenue ~ '[^0-9.]';

3- ุทุฑููุฉ ุงูุชุดุงู ุชูุงุฑูุฎ ุบูุฑ ุตุงูุญุฉ 
SELECT * FROM new_region WHERE date IS NULL OR date = '0000-00-00' OR date > NOW();

โ ุงูุญู:
โข	ุชุญุฏูุฏ ุงูุชูุงุฑูุฎ ุบูุฑ ุงูุตุงูุญุฉ ูุชุตุญูุญูุง ูุฏูููุง.
โข	ุชุนููุถ ุงูููู ุงููุงุฑุบุฉ ุจุชุงุฑูุฎ ุงูุชุฑุงุถู:


UPDATE new_region SET date = '2000-01-01' WHERE date IS NULL;


#4 ุงูุชุดุงู ุงููุณุงูุงุช 
SELECT * FROM new_region WHERE region LIKE ' %' OR region LIKE '% ';


ุญู 
UPDATE new_region 
SET region = TRIM(REGEXP_REPLACE(region, '[ ]+', ' ', 'g'));


5- ุนุฏู ูุฌูุฏ ููุฑุณ ููุชุงุฑูุฎ 
ุญู ุงููุดููุฉ 
CREATE INDEX idx_date ON new_region(date);


6-ุงุณุชูุฑุงุฏ ูููุงุช csv ููู ุญุงูุฉ ุงู ุชูุณูู ุงููุบุฉ ุนุฑุจู 
ูุฌุจ ูุถุน semicolon


COPY new_region(region, revenue, "date")
FROM 'C:\\data\\new region.csv'
DELIMITER ';'
CSV HEADER
ENCODING 'UTF8';


7 - ูุงู ุงูุชุฃูุฏ ูู ุนุฏู ูุฌูุฏ ููู ููููุฏุฉ ูู ุนููุฏ ุงูุงูุฑุงุฏุงุช 

๐ ุงูุชุดุงู ุงููุดููุฉ:

SELECT * FROM new_region WHERE revenue IS NULL;

  ุงูุญู 
ุญุฐู ุนููุฏ ุงูุงูุฑุงุฏุงุช 
DELETE FROM new_region WHERE revenue IS NULL OR revenue = '';

