#مراجعة استيراد الملف واظهار جميع البيانات 
import pandas as pd

file_name = "بيانات مناطق.csv"

df = pd.read_csv(file_name, sep=';')
pd.set_option("display.max_rows", None)
print(df)


#1 للتعرف على القيم المفقودة في اي عمود 

df.isna().sum()
print(df)

#2 لملء القيم المفقودة بمتوسط القيم في عمود الايرادات
df['revenue'].fillna(df['revenue'].mean(), inplace=True)
print(df)

#او ملأ  بصفر
df.fillna(0, inplace=True)
print(df)


## تحويل عمود 'data' إلى نوع تاريخي
df["data"] = pd.to_datetime(df["data"], errors='coerce')

df["day_name"] = df["data"].dt.day_name()  # اسم اليوم (مثل الأحد، الإثنين)
df["month_name"] = df["data"].dt.month_name()  # اسم الشهر (يناير، فبراير)

print(df[["data", "day_name", "month_name"]])

#2 date
df["year"] = df["data"].dt.year
df["month"] = df["data"].dt.month
df["day"] = df["data"].dt.day
df["hour"] = df["data"].dt.hour
df["minute"] = df["data"].dt.minute
df["second"] = df["data"].dt.second

print(df[["data", "year", "month", "day", "hour", "minute", "second"]])


#date 3 حساب الفارق الزمني 
df["data"] = pd.to_datetime(df["data"])  # التأكد من نوع العمود
df["days_since"] = (df["data"] - df["data"].min()).dt.days

print(df[["data", "days_since"]])


# فرق الايام 
df["prev_date"] = df["data"].shift(1)  # إزاحة القيم للحصول على التاريخ السابق
df["diff_days"] = (df["data"] - df["prev_date"]).dt.days  # الفرق بالأيام

print(df[["data", "prev_date", "diff_days"]])

# اول الشهر من نفس التاريخ 

df["month_start"] = df["data"].dt.to_period("M").dt.start_time
print(df[["data", "month_start"]])


#رقم الاسبوع من السنة 

df["week_number"] = df["data"].dt.isocalendar().week
print(df[["data", "week_number"]])

# استخراج اسم اليوم والشهر 

df["day_name"] = df["data"].dt.day_name()
df["month_name"] = df["data"].dt.month_name()

# عرض النتيجة
print(df[["data", "day_name", "month_name"]])

#mat 1
import pandas as pd
import matplotlib.pyplot as plt

# قراءة ملف الإكسيل
file_name = "بيانات مناطق.csv"

df = pd.read_csv(file_name, sep=';')
# تجميع البيانات حسب المنطقة وحساب الإيرادات
df.groupby('region')['revenue'].sum().plot(kind='bar')

# إضافة العنوان والعناوين للمحاور
plt.title("revenues by Region")
plt.xlabel("region")
plt.ylabel("revenues")

# عرض الرسم البياني
plt.show()


#او  هنستخدم سطرين كود 
# تحديد الأعمدة الرقمية فقط
numeric_cols = df.select_dtypes(include=['number']).columns

# استبدال القيم المفقودة في الأعمدة الرقمية فقط بالمتوسط
df[numeric_cols] = df[numeric_cols].apply(lambda col: col.fillna(col.mean()))
print(df)

#2 لحذف الصف الي فيه قيم مفقودة # 2. تنظيف البيانات (حذف الصفوف التي تحتوي على قيم مفقودة في العمود 'revenue')

df = df.dropna(subset=['revenue'])
print(df)


#4لحذف جميع الصفوف التي تحتوي على أي قيمة مفقودة في أي عمود:

df.dropna(inplace=True)
print(df)



### تحويل عمود 'data' إلى نوع تاريخي
df["data"] = pd.to_datetime(df["data"], errors='coerce')

# استخراج السنة، الشهر، اليوم
df["year"] = df["data"].dt.year
df["month"] = df["data"].dt.month
df["day"] = df["data"].dt.day

# عرض البيانات بعد التحليل
print(df[["data", "year", "month", "day"]])


#MAT1
import pandas as pd
import matplotlib.pyplot as plt
import arabic_reshaper
from bidi.algorithm import get_display

# قراءة ملف الإكسل
file_name = "بيانات مناطق.csv"
df = pd.read_csv(file_name, sep=';', encoding='utf-8-sig')

# تحويل الإيرادات إلى أرقام والتخلص من القيم غير الصالحة
df['revenue'] = pd.to_numeric(df['revenue'], errors='coerce')
df_cleaned = df.dropna(subset=['revenue'])

# تجميع البيانات حسب المنطقة وحساب الإيرادات
region_revenue = df_cleaned.groupby('region')['revenue'].sum()

# إعادة تشكيل النصوص العربية لضمان ظهورها بشكل صحيح
regions = [get_display(arabic_reshaper.reshape(str(region))) for region in region_revenue.index]

# رسم مخطط الدونات
plt.figure(figsize=(8, 8))
plt.pie(region_revenue, labels=regions, autopct='%1.1f%%', 
        startangle=140, wedgeprops={'width': 0.4}, textprops={'fontsize': 12, 'fontname': 'Tahoma'})

# إضافة العنوان مع دعم العربية
plt.title(get_display(arabic_reshaper.reshape("نسبة الإيرادات حسب المنطقة")), fontsize=14, fontname="Tahoma")

# عرض المخطط
plt.show()



#44
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import arabic_reshaper
from bidi.algorithm import get_display




# ضبط حجم الشكل
plt.figure(figsize=(8, 6))

# إنشاء جدول حراري باستخدام heatmap
sns.heatmap(df_cleaned.pivot_table(index="region", values="revenue", aggfunc="sum"), 
            annot=True, fmt=".0f", cmap="coolwarm", linewidths=1, linecolor="black")


# عرض الجدول
plt.show()
